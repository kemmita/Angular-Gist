1. The goal is to click a button and to have the image we click automatically update in the parent component 

2. Here is the button we will be clicking in the child componenet.html
   <button class="btn btn-xs" type="button" 
        (click)="setMainPhoto(photo)" 
        [ngClass]="photo.isMain? 'btn-success active' : 'btn-default'"
        [disabled]="photo.isMain"
        >Main</button>
        
 3. here is the child component.ts

export class PhotoEditorComponent implements OnInit {
@Input() photos: Photo[];
uploader: FileUploader;
baseUrl = environment.apiUrl;
currentMain: Photo;
// we will use the @Output to send a string that will contain the images url
@Output() getMemberPhotoChange = new EventEmitter<string>();

  constructor(private authservice: AuthService, private userservices: UserService, private alertify: AlertifyService) { }

  ngOnInit() {
    this.initializeUploader();
  }

  setMainPhoto(photo: Photo) {
    // (userId: number, photoId: number) is what we need for the method in the user service. The first one 'userId' will be provided
    // by the decodedtoken below. photoId will be provided by the photo object being passed and then grabing its Id
      this.userservices.setMainPhoto(this.authservice.decodedToken.nameid, photo.id).subscribe(() => {
    // using underscore js we use the _.findWhere method to itterate through an array. first value provided is the name of the arry
    // and the second is the key value pair.
        this.currentMain = _.findWhere(this.photos, {isMain: true});
        // we then set it to false
        this.currentMain.isMain = false;
        // we then set the clicked one to true
        photo.isMain = true;
        //here we call the @Output above and emit the photo.url that is being passed in by our photo object in the params of this method
        this.getMemberPhotoChange.emit(photo.url);
      }, error => {
          this.alertify.error(error);
      });
  }
}


4. Now in the parent component.html as you can see we call the getMemberPhotoChange variable that we set above and the event being passed below in the params is simply the url from the photo object 
 <app-photo-editor [photos]="user.photos" (getMemberPhotoChange)="updateMainPhoto($event)"></app-photo-editor>
 
 
 5. now in the parent component.ts we create the upodateMainPhoto method and pass the $event "image url"
 //we take that url and set the user object .photourl to the string that was emitted in the child componenet
   updateMainPhoto(e) {
    this.user.photoUrl = e;
  }
  
 6. Now in the parent component.html again we see that user.photourl is placed within the html and has now been updated
 <img class="profile-image thumbnail" src="{{user.photoUrl}}" alt="{{user.knownAs}}">
